docker0:
flags=4099<UP\r\nBROADCAST\r\nMULTICAST>
mtu
1500
inet
172
17
0
1
netmask
255
255
0
0
broadcast
172
17
255
255
ether
02:42:b8:17:e2:6e
txqueuelen
0
(Ethernet)
RX
packets
0
bytes
0
(0
0
B)
RX
errors
0
dropped
0
overruns
0
frame
0
TX
packets
0
bytes
0
(0
0
B)
TX
errors
0
dropped
0
overruns
0
carrier
0
collisions
0
enp3s0:
flags=4163<UP\r\nBROADCAST\r\nRUNNING\r\nMULTICAST>
mtu
1500
ether
f4:4d:30:14:41:d1
txqueuelen
1000
(Ethernet)
RX
packets
41298811
bytes
3572184992
(3
5
GB)
RX
errors
0
dropped
4
overruns
0
frame
0
TX
packets
48476079
bytes
67443043099
(67
4
GB)
TX
errors
0
dropped
0
overruns
0
carrier
0
collisions
0
lo:
flags=73<UP\r\nLOOPBACK\r\nRUNNING>
mtu
65536
inet
127
0
0
1
netmask
255
0
0
0
inet6
::1
prefixlen
128
scopeid
0x10<host>
loop
txqueuelen
1000
(Local
Loopback)
RX
packets
7171527
bytes
28127606939
(28
1
GB)
RX
errors
0
dropped
0
overruns
0
frame
0
TX
packets
7171527
bytes
28127606939
(28
1
GB)
TX
errors
0
dropped
0
overruns
0
carrier
0
collisions
0
ppp0:
flags=4305<UP\r\nPOINTOPOINT\r\nRUNNING\r\nNOARP\r\nMULTICAST>
mtu
1492
inet
10
168
57
226
netmask
255
255
255
255
destination
10
168
0
1
ppp
txqueuelen
3
(Point-to-Point
Protocol)
RX
packets
40280323
bytes
2504866897
(2
5
GB)
RX
errors
0
dropped
0
overruns
0
frame
0
TX
packets
48390145
bytes
66375881747
(66
3
GB)
TX
errors
0
dropped
0
overruns
0
carrier
0
collisions
0
enp2s0f0:
flags=4163<UP\r\nBROADCAST\r\nRUNNING\r\nMULTICAST>
mtu
1500
inet
192
168
0
224
netmask
255
255
0
0
broadcast
192
168
255
255
inet6
fe80::225:90ff:fe95:930a
prefixlen
64
scopeid
0x20<link>
ether
00:25:90:95:93:0a
txqueuelen
1000
(Ethernet)
RX
packets
92970485
bytes
130056239320
(121
1
GiB)
RX
errors
0
dropped
36
overruns
0
frame
0
TX
packets
38556331
bytes
47887632237
(44
5
GiB)
TX
errors
0
dropped
0
overruns
0
carrier
0
collisions
0
device
memory
0xdfb20000-dfb3ffff
enp2s0f1:
flags=4163<UP\r\nBROADCAST\r\nRUNNING\r\nMULTICAST>
mtu
1500
inet
202
117
249
10
netmask
255
255
255
0
broadcast
202
117
249
255
inet6
fe80::225:90ff:fe95:930b
prefixlen
64
scopeid
0x20<link>
ether
00:25:90:95:93:0b
txqueuelen
1000
(Ethernet)
RX
packets
34277955
bytes
2403415536
(2
2
GiB)
RX
errors
0
dropped
24
overruns
0
frame
0
TX
packets
53170538
bytes
78580732491
(73
1
GiB)
TX
errors
0
dropped
0
overruns
0
carrier
0
collisions
0
device
memory
0xdfb00000-dfb1ffff
lo:
flags=73<UP\r\nLOOPBACK\r\nRUNNING>
mtu
65536
inet
127
0
0
1
netmask
255
0
0
0
inet6
::1
prefixlen
128
scopeid
0x10<host>
loop
txqueuelen
0
(Local
Loopback)
RX
packets
128023
bytes
8105306
(7
7
MiB)
RX
errors
0
dropped
0
overruns
0
frame
0
TX
packets
128023
bytes
8105306
(7
7
MiB)
TX
errors
0
dropped
0
overruns
0
carrier
0
collisions
0
virbr0:
flags=4099<UP\r\nBROADCAST\r\nMULTICAST>
mtu
1500
inet
192
168
122
1
netmask
255
255
255
0
broadcast
192
168
122
255
ether
52:54:00:bd:62:f6
txqueuelen
0
(Ethernet)
RX
packets
0
bytes
0
(0
0
B)
RX
errors
0
dropped
0
overruns
0
frame
0
TX
packets
0
bytes
0
(0
0
B)
TX
errors
0
dropped
0
overruns
0
carrier
0
collisions
0
eth0
Link
encap:Ethernet
HWaddr
6C:92:BF:00:BD:72
UP
BROADCAST
MULTICAST
MTU:1500
Metric:1
RX
packets:0
errors:0
dropped:0
overruns:0
frame:0
TX
packets:0
errors:0
dropped:0
overruns:0
carrier:0
collisions:0
txqueuelen:1000
RX
bytes:0
(0
0
b)
TX
bytes:0
(0
0
b)
Memory:df9a0000-df9c0000
eth1
Link
encap:Ethernet
HWaddr
6C:92:BF:00:BD:73
inet
addr:192
168
0
2
Bcast:192
168
0
255
Mask:255
255
255
0
inet6
addr:
fe80::6e92:bfff:fe00:bd73/64
Scope:Link
UP
BROADCAST
RUNNING
MULTICAST
MTU:1500
Metric:1
RX
packets:289366027
errors:0
dropped:0
overruns:68
frame:0
TX
packets:778306599
errors:0
dropped:0
overruns:0
carrier:0
collisions:0
txqueuelen:1000
RX
bytes:192389723041
(179
1
GiB)
TX
bytes:853772281590
(795
1
GiB)
Memory:df940000-df960000
Ifconfig
uses
the
ioctl
access
method
to
get
the
full
address
information\r\n
which
limits
hardware
addresses
to
8
bytes

Because
Infiniband
address
has
20
bytes\r\n
only
the
first
8
bytes
are
displayed
correctly

Ifconfig
is
obsolete!
For
replacement
check
ip

ib0
Link
encap:InfiniBand
HWaddr
80:00:00:48:FE:80:00:00:00:00:00:00:00:00:00:00:00:00:00:00
inet
addr:10
0
0
2
Bcast:10
0
255
255
Mask:255
255
0
0
inet6
addr:
fe80::6e02:5792:bf00:34dd/64
Scope:Link
UP
BROADCAST
RUNNING
MULTICAST
MTU:65520
Metric:1
RX
packets:13141661
errors:0
dropped:0
overruns:0
frame:0
TX
packets:48164
errors:0
dropped:0
overruns:0
carrier:0
collisions:0
txqueuelen:1024
RX
bytes:2080720339
(1
9
GiB)
TX
bytes:2728690
(2
6
MiB)
lo
Link
encap:Local
Loopback
inet
addr:127
0
0
1
Mask:255
0
0
0
inet6
addr:
::1/128
Scope:Host
UP
LOOPBACK
RUNNING
MTU:16436
Metric:1
RX
packets:2629693
errors:0
dropped:0
overruns:0
frame:0
TX
packets:2629693
errors:0
dropped:0
overruns:0
carrier:0
collisions:0
txqueuelen:0
RX
bytes:2894296668
(2
6
GiB)
TX
bytes:2894296668
(2
6
GiB)
IFCONFIG(8)
Linux
System
Administrator's
Manual
IFCONFIG(8)
NAME
ifconfig
-
configure
a
network
interface
SYNOPSIS
ifconfig
[-v]
[-a]
[-s]
[interface]
ifconfig
[-v]
interface
[aftype]
options
|
address




DESCRIPTION
Ifconfig
is
used
to
configure
the
kernel-resident
network
interfaces

It
is
used
at
boot
time
to
set
up
interfaces
as
necessary

After
that\r\n
it
is
usually
only
needed
when
debugging
or
when
system
tuning
is
needed

If
no
arguments
are
given\r\n
ifconfig
displays
the
status
of
the
currently
active
interfaces

If
a
single
interface
argument
is
given\r\n
it
displays
the
status
of
the
given
interface
only;
if
a
single
-a
argument
is
given\r\n
it
displays
the
status
of
all
interfaces\r\n
even
those
that
are
down

Otherwise\r\n
it
configures
an
interface

Address
Families
If
the
first
argument
after
the
interface
name
is
recognized
as
the
name
of
a
supported
address
family\r\n
that
address
family
is
used
for
decoding
and
displaying
all
protocol
addresses

Currently
supported
address
families
include
inet
(TCP/IP\r\n
default)\r\n
inet6
(IPv6)\r\n
ax25
(AMPR
Packet
Radio)\r\n
ddp
(Appletalk
Phase
2)\r\n
ipx
(Novell
IPX)
and
netrom
(AMPR
Packet
radio)

All
numbers
supplied
as
parts
in
IPv4
dotted
decimal
notation
may
be
decimal\r\n
octal\r\n
or
hexadecimal\r\n
as
specified
in
the
ISO
C
standard
(that
is\r\n
a
lead‐
ing
0x
or
0X
implies
hexadecimal;
otherwise\r\n
a
leading
'0'
implies
octal;
otherwise\r\n
the
number
is
interpreted
as
decimal)

Use
of
hexadecimal
and
octal
numbers
is
not
RFC-
compliant
and
therefore
its
use
is
discouraged

OPTIONS
-a
display
all
interfaces
which
are
currently
available\r\n
even
if
down
-s
display
a
short
list
(like
netstat
-i)
-v
be
more
verbose
for
some
error
conditions
interface
The
name
of
the
interface

This
is
usually
a
driver
name
followed
by
a
unit
number\r\n
for
example
eth0
for
the
first
Ethernet
interface

If
your
kernel
supports
alias
interfaces\r\n
you
can
specify
them
with
syntax
like
eth0:0
for
the
first
alias
of
eth0

You
can
use
them
to
assign
more
addresses

To
delete
an
alias
interface
use
ifcon‐
fig
eth0:0
down

Note:
for
every
scope
(i
e

same
net
with
address/netmask
combination)
all
aliases
are
deleted\r\n
if
you
delete
the
first
(primary)

up
This
flag
causes
the
interface
to
be
activated

It
is
implicitly
specified
if
an
address
is
assigned
to
the
interface;
you
can
suppress
this
behavior
when
using
an
alias
interface
by
appending
an
-
to
the
alias
(e
g

eth0:0-)

It
is
also
suppressed
when
using
the
IPv4
0
0
0
0
address
as
the
kernel
will
use
this
to
implicitly
delete
alias
interfaces

down
This
flag
causes
the
driver
for
this
interface
to
be
shut
down

[-]arp
Enable
or
disable
the
use
of
the
ARP
protocol
on
this
interface

[-]promisc
Enable
or
disable
the
promiscuous
mode
of
the
interface

If
selected\r\n
all
packets
on
the
network
will
be
received
by
the
interface

[-]allmulti
Enable
or
disable
all-multicast
mode

If
selected\r\n
all
multicast
packets
on
the
network
will
be
received
by
the
interface

mtu
N
This
parameter
sets
the
Maximum
Transfer
Unit
(MTU)
of
an
interface

dstaddr
addr
Set
the
remote
IP
address
for
a
point-to-point
link
(such
as
PPP)

This
keyword
is
now
obsolete;
use
the
pointopoint
keyword
instead

netmask
addr
Set
the
IP
network
mask
for
this
interface

This
value
defaults
to
the
usual
class
A\r\n
B
or
C
network
mask
(as
derived
from
the
interface
IP
address)\r\n
but
it
can
be
set
to
any
value

add
addr/prefixlen
Add
an
IPv6
address
to
an
interface

del
addr/prefixlen
Remove
an
IPv6
address
from
an
interface

tunnel
::aa
bb
cc
dd
Create
a
new
SIT
(IPv6-in-IPv4)
device\r\n
tunnelling
to
the
given
destination

irq
addr
Set
the
interrupt
line
used
by
this
device

Not
all
devices
can
dynamically
change
their
IRQ
setting

io_addr
addr
Set
the
start
address
in
I/O
space
for
this
device

mem_start
addr
Set
the
start
address
for
shared
memory
used
by
this
device

Only
a
few
devices
need
this

media
type
Set
the
physical
port
or
medium
type
to
be
used
by
the
device

Not
all
devices
can
change
this
setting\r\n
and
those
that
can
vary
in
what
values
they
support

Typical
values
for
type
are
10base2
(thin
Ethernet)\r\n
10baseT
(twisted-pair
10Mbps
Ethernet)\r\n
AUI
(external
transceiver)
and
so
on

The
special
medium
type
of
auto
can
be
used
to
tell
the
driver
to
auto-sense
the
media

Again\r\n
not
all
drivers
can
do
this

[-]broadcast
[addr]
If
the
address
argument
is
given\r\n
set
the
protocol
broadcast
address
for
this
interface

Otherwise\r\n
set
(or
clear)
the
IFF_BROADCAST
flag
for
the
interface

[-]pointopoint
[addr]
This
keyword
enables
the
point-to-point
mode
of
an
interface\r\n
meaning
that
it
is
a
direct
link
between
two
machines
with
nobody
else
listening
on
it

If
the
address
argument
is
also
given\r\n
set
the
protocol
address
of
the
other
side
of
the
link\r\n
just
like
the
obsolete
dstaddr
keyword
does

Otherwise\r\n
set
or
clear
the
IFF_POINTOPOINT
flag
for
the
interface

hw
class
address
Set
the
hardware
address
of
this
interface\r\n
if
the
device
driver
supports
this
operation

The
keyword
must
be
followed
by
the
name
of
the
hardware
class
and
the
print‐
able
ASCII
equivalent
of
the
hardware
address

Hardware
classes
currently
supported
include
ether
(Ethernet)\r\n
ax25
(AMPR
AX
25)\r\n
ARCnet
and
netrom
(AMPR
NET/ROM)

multicast
Set
the
multicast
flag
on
the
interface

This
should
not
normally
be
needed
as
the
drivers
set
the
flag
correctly
themselves

address
The
IP
address
to
be
assigned
to
this
interface

txqueuelen
length
Set
the
length
of
the
transmit
queue
of
the
device

It
is
useful
to
set
this
to
small
values
for
slower
devices
with
a
high
latency
(modem
links\r\n
ISDN)
to
prevent
fast
bulk
transfers
from
disturbing
interactive
traffic
like
telnet
too
much

NOTES
Since
kernel
release
2
2
there
are
no
explicit
interface
statistics
for
alias
interfaces
anymore

The
statistics
printed
for
the
original
address
are
shared
with
all
alias
addresses
on
the
same
device

If
you
want
per-address
statistics
you
should
add
explicit
accounting
rules
for
the
address
using
the
iptables(8)
command

Interrupt
problems
with
Ethernet
device
drivers
fail
with
EAGAIN
(SIOCSIIFLAGS:
Resource
temporarily
unavailable)
it
is
most
likely
a
interrupt
conflict

See
http://www
scyld
com/expert/irq-conflict
html
for
more
information

FILES
/proc/net/dev
/proc/net/if_inet6
BUGS
Ifconfig
uses
the
ioctl
access
method
to
get
the
full
address
information\r\n
which
limits
hardware
addresses
to
8
bytes

Because
Infiniband
hardware
address
has
20
bytes\r\n
only
the
first
8
bytes
are
displayed
correctly

Please
use
ip
link
command
from
iproute2
package
to
display
link
layer
informations
including
the
hardware
address

While
appletalk
DDP
and
IPX
addresses
will
be
displayed
they
cannot
be
altered
by
this
command

SEE
ALSO
route(8)\r\n
netstat(8)\r\n
arp(8)\r\n
rarp(8)\r\n
iptables(8)\r\n
ifup(8)\r\n
interfaces(5)

http://physics
nist
gov/cuu/Units/binary
html
-
Prefixes
for
binary
multiples
AUTHORS
Fred
N

van
Kempen\r\n
<waltje@uwalt
nl
mugnet
org>
Alan
Cox\r\n
<Alan
Cox@linux
org>
Phil
Blundell\r\n
<Philip
Blundell@pobox
com>
Andi
Kleen
Bernd
Eckenfels\r\n
<net-tools@lina
inka
de>
net-tools
2008-10-03
IFCONFIG(8)
PS(1)
User
Commands
PS(1)
NAME
ps
-
report
a
snapshot
of
the
current
processes

SYNOPSIS
ps
[options]
DESCRIPTION
ps
displays
information
about
a
selection
of
the
active
processes

If
you
want
a
repetitive
update
of
the
selection
and
the
displayed
information\r\n
use
top(1)
instead

This
version
of
ps
accepts
several
kinds
of
options:
1
UNIX
options\r\n
which
may
be
grouped
and
must
be
preceded
by
a
dash

2
BSD
options\r\n
which
may
be
grouped
and
must
not
be
used
with
a
dash

3
GNU
long
options\r\n
which
are
preceded
by
two
dashes

Options
of
different
types
may
be
freely
mixed\r\n
but
conflicts
can
appear

There
are
some
synonymous
options\r\n
which
are
functionally
identical\r\n
due
to
the
many
standards
and
ps
implementations
that
this
ps
is
compatible
with

Note
that
"ps
-aux"
is
distinct
from
"ps
aux"

The
POSIX
and
UNIX
standards
require
that
"ps
-aux"
print
all
processes
owned
by
a
user
named
"x"\r\n
as
well
as
printing
all
processes
that
would
be
selected
by
the
-a
option

If
the
user
named
"x"
does
not
exist\r\n
this
ps
may
interpret
the
command
as
"ps
aux"
instead
and
print
a
warning

This
behavior
is
intended
to
aid
in
transitioning
old
scripts
and
habits

It
is
fragile\r\n
subject
to
change\r\n
and
thus
should
not
be
relied
upon

By
default\r\n
ps
selects
all
processes
with
the
same
effective
user
ID
(euid=EUID)
as
the
current
user
and
associated
with
the
same
terminal
as
the
invoker

It
displays
the
process
ID
(pid=PID)\r\n
the
terminal
associated
with
the
process
(tname=TTY)\r\n
the
cumulated
CPU
time
in
[DD-]hh:mm:ss
format
(time=TIME)\r\n
and
the
executable
name
(ucmd=CMD)

Output
is
unsorted
by
default

The
use
of
BSD-style
options
will
add
process
state
(stat=STAT)
to
the
default
display
and
show
the
command
args
(args=COMMAND)
instead
of
the
executable
name

You
can
override
this
with
the
PS_FORMAT
environment
variable

The
use
of
BSD-style
options
will
also
change
the
process
selection
to
include
processes
on
other
terminals
(TTYs)
that
are
owned
by
you;
alternately\r\n
this
may
be
described
as
setting
the
selection
to
be
the
set
of
all
processes
filtered
to
exclude
processes
owned
by
other
users
or
not
on
a
terminal

These
effects
are
not
considered
when
options
are
described
as
being
"identical"
below\r\n
so
-M
will
be
considered
identical
to
Z
and
so
on

Except
as
described
below\r\n
process
selection
options
are
additive

The
default
selection
is
discarded\r\n
and
then
the
selected
processes
are
added
to
the
set
of
processes
to
be
displayed

A
process
will
thus
be
shown
if
it
meets
any
of
the
given
selection
criteria

EXAMPLES
To
see
every
process
on
the
system
using
standard
syntax:
ps
-e
ps
-ef
ps
-eF
ps
-ely
To
see
every
process
on
the
system
using
BSD
syntax:
ps
ax
ps
axu
To
print
a
process
tree:
ps
-ejH
ps
axjf
To
get
info
about
threads:
ps
-eLf
ps
axms
To
get
security
info:
ps
-eo
euser\r\nruser\r\nsuser\r\nfuser\r\nf\r\ncomm\r\nlabel
ps
axZ
ps
-eM
To
see
every
process
running
as
root
(real
&
effective
ID)
in
user
format:
ps
-U
root
-u
root
u
To
see
every
process
with
a
user-defined
format:
ps
-eo
pid\r\ntid\r\nclass\r\nrtprio\r\nni\r\npri\r\npsr\r\npcpu\r\nstat\r\nwchan:14\r\ncomm
ps
axo
stat\r\neuid\r\nruid\r\ntty\r\ntpgid\r\nsess\r\npgrp\r\nppid\r\npid\r\npcpu\r\ncomm
ps
-Ao
pid\r\ntt\r\nuser\r\nfname\r\ntmout\r\nf\r\nwchan
Print
only
the
process
IDs
of
syslogd:
ps
-C
syslogd
-o
pid=
Print
only
the
name
of
PID
42:
ps
-q
42
-o
comm=
SIMPLE
PROCESS
SELECTION
a
Lift
the
BSD-style
"only
yourself"
restriction\r\n
which
is
imposed
upon
the
set
of
all
processes
when
some
BSD-style
(without
"-")
options
are
used
or
when
the
ps
personality
setting
is
BSD-like

The
set
of
processes
selected
in
this
manner
is
in
addition
to
the
set
of
processes
selected
by
other
means

An
alternate
description
is
that
this
option
causes
ps
to
list
all
processes
with
a
terminal
(tty)\r\n
or
to
list
all
processes
when
used
together
with
the
x
option

-A
Select
all
processes

Identical
to
-e

-a
Select
all
processes
except
both
session
leaders
(see
getsid(2))
and
processes
not
associated
with
a
terminal

-d
Select
all
processes
except
session
leaders

--deselect
Select
all
processes
except
those
that
fulfill
the
specified
conditions
(negates
the
selection)

Identical
to
-N

-e
Select
all
processes

Identical
to
-A

g
Really
all\r\n
even
session
leaders

This
flag
is
obsolete
and
may
be
discontinued
in
a
future
release

It
is
normally
implied
by
the
a
flag\r\n
and
is
only
useful
when
operating
in
the
sunos4
personality

-N
Select
all
processes
except
those
that
fulfill
the
specified
conditions
(negates
the
selection)

Identical
to
--deselect

T
Select
all
processes
associated
with
this
terminal

Identical
to
the
t
option
without
any
argument

r
Restrict
the
selection
to
only
running
processes

x
Lift
the
BSD-style
"must
have
a
tty"
restriction\r\n
which
is
imposed
upon
the
set
of
all
processes
when
some
BSD-style
(without
"-")
options
are
used
or
when
the
ps
personality
setting
is
BSD-like

The
set
of
processes
selected
in
this
manner
is
in
addition
to
the
set
of
processes
selected
by
other
means

An
alternate
description
is
that
this
option
causes
ps
to
list
all
processes
owned
by
you
(same
EUID
as
ps)\r\n
or
to
list
all
processes
when
used
together
with
the
a
option

PROCESS
SELECTION
BY
LIST
These
options
accept
a
single
argument
in
the
form
of
a
blank-separated
or
comma-separated
list

They
can
be
used
multiple
times

For
example:
ps
-p
"1
2"
-p
3\r\n4
-123
Identical
to
--pid
123

123
Identical
to
--pid
123

-C
cmdlist
Select
by
command
name

This
selects
the
processes
whose
executable
name
is
given
in
cmdlist

-G
grplist
Select
by
real
group
ID
(RGID)
or
name

This
selects
the
processes
whose
real
group
name
or
ID
is
in
the
grplist
list

The
real
group
ID
identifies
the
group
of
the
user
who
created
the
process\r\n
see
getgid(2)

-g
grplist
Select
by
session
OR
by
effective
group
name

Selection
by
session
is
specified
by
many
standards\r\n
but
selection
by
effective
group
is
the
logical
behavior
that
several
other
operating
systems
use

This
ps
will
select
by
session
when
the
list
is
completely
numeric
(as
sessions
are)

Group
ID
numbers
will
work
only
when
some
group
names
are
also
specified

See
the
-s
and
--group
options

--Group
grplist
Select
by
real
group
ID
(RGID)
or
name

Identical
to
-G

--group
grplist
Select
by
effective
group
ID
(EGID)
or
name

This
selects
the
processes
whose
effective
group
name
or
ID
is
in
grplist

The
effective
group
ID
describes
the
group
whose
file
access
permissions
are
used
by
the
process
(see
getegid(2))

The
-g
option
is
often
an
alternative
to
--group

p
pidlist
Select
by
process
ID

Identical
to
-p
and
--pid

-p
pidlist
Select
by
PID

This
selects
the
processes
whose
process
ID
numbers
appear
in
pidlist

Identical
to
p
and
--pid

--pid
pidlist
Select
by
process
ID

Identical
to
-p
and
p

--ppid
pidlist
Select
by
parent
process
ID

This
selects
the
processes
with
a
parent
process
ID
in
pidlist

That
is\r\n
it
selects
processes
that
are
children
of
those
listed
in
pidlist

q
pidlist
Select
by
process
ID
(quick
mode)

Identical
to
-q
and
--quick-pid

-q
pidlist
Select
by
PID
(quick
mode)

This
selects
the
processes
whose
process
ID
numbers
appear
in
pidlist

With
this
option
ps
reads
the
necessary
info
only
for
the
pids
listed
in
the
pidlist
and
doesn't
apply
additional
filtering
rules

The
order
of
pids
is
unsorted
and
preserved

No
additional
selection
options\r\n
sorting
and
forest
type
listings
are
allowed
in
this
mode

Identical
to
q
and
--quick-pid

--quick-pid
pidlist
Select
by
process
ID
(quick
mode)

Identical
to
-q
and
q

-s
sesslist
Select
by
session
ID

This
selects
the
processes
with
a
session
ID
specified
in
sesslist

--sid
sesslist
Select
by
session
ID

Identical
to
-s

t
ttylist
Select
by
tty

Nearly
identical
to
-t
and
--tty\r\n
but
can
also
be
used
with
an
empty
ttylist
to
indicate
the
terminal
associated
with
ps

Using
the
T
option
is
considered
cleaner
than
using
t
with
an
empty
ttylist

-t
ttylist
Select
by
tty

This
selects
the
processes
associated
with
the
terminals
given
in
ttylist

Terminals
(ttys\r\n
or
screens
for
text
output)
can
be
specified
in
several
forms:
/dev/ttyS1\r\n
ttyS1\r\n
S1

A
plain
"-"
may
be
used
to
select
processes
not
attached
to
any
terminal

--tty
ttylist
Select
by
terminal

Identical
to
-t
and
t

U
userlist
Select
by
effective
user
ID
(EUID)
or
name

This
selects
the
processes
whose
effective
user
name
or
ID
is
in
userlist

The
effective
user
ID
describes
the
user
whose
file
access
permissions
are
used
by
the
process
(see
geteuid(2))

Identical
to
-u
and
--user

-U
userlist
Select
by
real
user
ID
(RUID)
or
name

It
selects
the
processes
whose
real
user
name
or
ID
is
in
the
userlist
list

The
real
user
ID
identifies
the
user
who
created
the
process\r\n
see
getuid(2)

-u
userlist
Select
by
effective
user
ID
(EUID)
or
name

This
selects
the
processes
whose
effective
user
name
or
ID
is
in
userlist

The
effective
user
ID
describes
the
user
whose
file
access
permissions
are
used
by
the
process
(see
geteuid(2))

Identical
to
U
and
--user

--User
userlist
Select
by
real
user
ID
(RUID)
or
name

Identical
to
-U

--user
userlist
Select
by
effective
user
ID
(EUID)
or
name

Identical
to
-u
and
U

OUTPUT
FORMAT
CONTROL
These
options
are
used
to
choose
the
information
displayed
by
ps

The
output
may
differ
by
personality

-c
Show
different
scheduler
information
for
the
-l
option

--context
Display
security
context
format
(for
SELinux)

-f
Do
full-format
listing

This
option
can
be
combined
with
many
other
UNIX-style
options
to
add
additional
columns

It
also
causes
the
command
arguments
to
be
printed

When
used
with
-L\r\n
the
NLWP
(number
of
threads)
and
LWP
(thread
ID)
columns
will
be
added

See
the
c
option\r\n
the
format
keyword
args\r\n
and
the
format
keyword
comm

-F
Extra
full
format

See
the
-f
option\r\n
which
-F
implies

--format
format
user-defined
format

Identical
to
-o
and
o

j
BSD
job
control
format

-j
Jobs
format

l
Display
BSD
long
format

-l
Long
format

The
-y
option
is
often
useful
with
this

-M
Add
a
column
of
security
data

Identical
to
Z
(for
SELinux)

O
format
is
preloaded
o
(overloaded)

The
BSD
O
option
can
act
like
-O
(user-defined
output
format
with
some
common
fields
predefined)
or
can
be
used
to
specify
sort
order

Heuristics
are
used
to
determine
the
behavior
of
this
option

To
ensure
that
the
desired
behavior
is
obtained
(sorting
or
formatting)\r\n
specify
the
option
in
some
other
way
(e
g

with
-O
or
--sort)

When
used
as
a
formatting
option\r\n
it
is
identical
to
-O\r\n
with
the
BSD
personality

-O
format
Like
-o\r\n
but
preloaded
with
some
default
columns

Identical
to
-o
pid\r\nformat\r\nstate\r\ntname\r\ntime\r\ncommand
or
-o
pid\r\nformat\r\ntname\r\ntime\r\ncmd\r\n
see
-o
below

o
format
Specify
user-defined
format

Identical
to
-o
and
--format

-o
format
User-defined
format

format
is
a
single
argument
in
the
form
of
a
blank-separated
or
comma-separated
list\r\n
which
offers
a
way
to
specify
individual
output
columns

The
recognized
keywords
are
described
in
the
STANDARD
FORMAT
SPECIFIERS
section
below

Headers
may
be
renamed
(ps
-o
pid\r\nruser=RealUser
-o
comm=Command)
as
desired

If
all
column
headers
are
empty
(ps
-o
pid=
-o
comm=)
then
the
header
line
will
not
be
output

Column
width
will
increase
as
needed
for
wide
headers;
this
may
be
used
to
widen
up
columns
such
as
WCHAN
(ps
-o
pid\r\nwchan=WIDE-WCHAN-COLUMN
-o
comm)

Explicit
width
control
(ps
opid\r\nwchan:42\r\ncmd)
is
offered
too

The
behavior
of
ps
-o
pid=X\r\ncomm=Y
varies
with
personality;
output
may
be
one
column
named
"X\r\ncomm=Y"
or
two
columns
named
"X"
and
"Y"

Use
multiple
-o
options
when
in
doubt

Use
the
PS_FORMAT
environment
variable
to
specify
a
default
as
desired;
DefSysV
and
DefBSD
are
macros
that
may
be
used
to
choose
the
default
UNIX
or
BSD
columns

s
Display
signal
format

u
Display
user-oriented
format

v
Display
virtual
memory
format

X
Register
format

-y
Do
not
show
flags;
show
rss
in
place
of
addr

This
option
can
only
be
used
with
-l

Z
Add
a
column
of
security
data

Identical
to
-M
(for
SELinux)

OUTPUT
MODIFIERS
c
Show
the
true
command
name

This
is
derived
from
the
name
of
the
executable
file\r\n
rather
than
from
the
argv
value

Command
arguments
and
any
modifications
to
them
are
thus
not
shown

This
option
effectively
turns
the
args
format
keyword
into
the
comm
format
keyword;
it
is
useful
with
the
-f
format
option
and
with
the
various
BSD-style
format
options\r\n
which
all
normally
display
the
command
arguments

See
the
-f
option\r\n
the
format
keyword
args\r\n
and
the
format
keyword
comm

--cols
n
Set
screen
width

--columns
n
Set
screen
width

--cumulative
Include
some
dead
child
process
data
(as
a
sum
with
the
parent)

e
Show
the
environment
after
the
command

f
ASCII
art
process
hierarchy
(forest)

--forest
ASCII
art
process
tree

h
No
header

(or\r\n
one
header
per
screen
in
the
BSD
personality)

The
h
option
is
problematic

Standard
BSD
ps
uses
this
option
to
print
a
header
on
each
page
of
output\r\n
but
older
Linux
ps
uses
this
option
to
totally
disable
the
header

This
version
of
ps
follows
the
Linux
usage
of
not
printing
the
header
unless
the
BSD
personality
has
been
selected\r\n
in
which
case
it
prints
a
header
on
each
page
of
output

Regardless
of
the
current
personality\r\n
you
can
use
the
long
options
--headers
and
--no-headers
to
enable
printing
headers
each
page
or
disable
headers
entirely\r\n
respectively

-H
Show
process
hierarchy
(forest)

--headers
Repeat
header
lines\r\n
one
per
page
of
output

k
spec
Specify
sorting
order

Sorting
syntax
is
[+|-]key[\r\n[+|-]key[\r\n


]]

Choose
a
multi-letter
key
from
the
STANDARD
FORMAT
SPECIFIERS
section

The
"+"
is
optional
since
default
direction
is
increasing
numerical
or
lexicographic
order

Identical
to
--sort

Examples:
ps
jaxkuid\r\n-ppid\r\n+pid
ps
axk
comm
o
comm\r\nargs
ps
kstart_time
-ef
--lines
n
Set
screen
height

n
Numeric
output
for
WCHAN
and
USER
(including
all
types
of
UID
and
GID)

--no-headers
Print
no
header
line
at
all

--no-heading
is
an
alias
for
this
option

O
order
Sorting
order
(overloaded)

The
BSD
O
option
can
act
like
-O
(user-defined
output
format
with
some
common
fields
predefined)
or
can
be
used
to
specify
sort
order

Heuristics
are
used
to
determine
the
behavior
of
this
option

To
ensure
that
the
desired
behavior
is
obtained
(sorting
or
formatting)\r\n
specify
the
option
in
some
other
way
(e
g

with
-O
or
--sort)

For
sorting\r\n
obsolete
BSD
O
option
syntax
is
O[+|-]k1[\r\n[+|-]k2[\r\n


]]

It
orders
the
processes
listing
according
to
the
multilevel
sort
specified
by
the
sequence
of
one-letter
short
keys
k1\r\nk2\r\n




described
in
the
OBSOLETE
SORT
KEYS
section
below

The
"+"
is
currently
optional\r\n
merely
re-iterating
the
default
direction
on
a
key\r\n
but
may
help
to
distinguish
an
O
sort
from
an
O
format

The
"-"
reverses
direction
only
on
the
key
it
precedes

--rows
n
Set
screen
height

S
Sum
up
some
information\r\n
such
as
CPU
usage\r\n
from
dead
child
processes
into
their
parent

This
is
useful
for
examining
a
system
where
a
parent
process
repeatedly
forks
off
short-lived
children
to
do
work

--sort
spec
Specify
sorting
order

Sorting
syntax
is
[+|-]key[\r\n[+|-]key[\r\n


]]

Choose
a
multi-letter
key
from
the
STANDARD
FORMAT
SPECIFIERS
section

The
"+"
is
optional
since
default
direction
is
increasing
numerical
or
lexicographic
order

Identical
to
k

For
example:
ps
jax
--sort=uid\r\n-ppid\r\n+pid
w
Wide
output

Use
this
option
twice
for
unlimited
width

-w
Wide
output

Use
this
option
twice
for
unlimited
width

--width
n
Set
screen
width

THREAD
DISPLAY
H
Show
threads
as
if
they
were
processes

-L
Show
threads\r\n
possibly
with
LWP
and
NLWP
columns

m
Show
threads
after
processes

-m
Show
threads
after
processes

-T
Show
threads\r\n
possibly
with
SPID
column

OTHER
INFORMATION
--help
section
Print
a
help
message

The
section
argument
can
be
one
of
simple\r\n
list\r\n
output\r\n
threads\r\n
misc
or
all

The
argument
can
be
shortened
to
one
of
the
underlined
letters
as
in:
s|l|o|t|m|a

--info
Print
debugging
info

L
List
all
format
specifiers

V
Print
the
procps-ng
version

-V
Print
the
procps-ng
version

--version
Print
the
procps-ng
version

NOTES
This
ps
works
by
reading
the
virtual
files
in
/proc

This
ps
does
not
need
to
be
setuid
kmem
or
have
any
privileges
to
run

Do
not
give
this
ps
any
special
permissions

CPU
usage
is
currently
expressed
as
the
percentage
of
time
spent
running
during
the
entire
lifetime
of
a
process

This
is
not
ideal\r\n
and
it
does
not
conform
to
the
standards
that
ps
otherwise
conforms
to

CPU
usage
is
unlikely
to
add
up
to
exactly
100%

The
SIZE
and
RSS
fields
don't
count
some
parts
of
a
process
including
the
page
tables\r\n
kernel
stack\r\n
struct
thread_info\r\n
and
struct
task_struct

This
is
usually
at
least
20
KiB
of
memory
that
is
always
resident

SIZE
is
the
virtual
size
of
the
process
(code+data+stack)

Processes
marked
<defunct>
are
dead
processes
(so-called
"zombies")
that
remain
because
their
parent
has
not
destroyed
them
properly

These
processes
will
be
destroyed
by
init(8)
if
the
parent
process
exits

If
the
length
of
the
username
is
greater
than
the
length
of
the
display
column\r\n
the
username
will
be
truncated

See
the
-o
and
-O
formatting
options
to
customize
length

Commands
options
such
as
ps
-aux
are
not
recommended
as
it
is
a
confusion
of
two
different
standards

According
to
the
POSIX
and
UNIX
standards\r\n
the
above
command
asks
to
display
all
processes
with
a
TTY
(generally
the
commands
users
are
running)
plus
all
processes
owned
by
a
user
named
"x"

If
that
user
doesn't
exist\r\n
then
ps
will
assume
you
really
meant
"ps
aux"

PROCESS
FLAGS
The
sum
of
these
values
is
displayed
in
the
"F"
column\r\n
which
is
provided
by
the
flags
output
specifier:
1
forked
but
didn't
exec
4
used
super-user
privileges
PROCESS
STATE
CODES
Here
are
the
different
values
that
the
s\r\n
stat
and
state
output
specifiers
(header
"STAT"
or
"S")
will
display
to
describe
the
state
of
a
process:
D
uninterruptible
sleep
(usually
IO)
R
running
or
runnable
(on
run
queue)
S
interruptible
sleep
(waiting
for
an
event
to
complete)
T
stopped
by
job
control
signal
t
stopped
by
debugger
during
the
tracing
W
paging
(not
valid
since
the
2
6
xx
kernel)
X
dead
(should
never
be
seen)
Z
defunct
("zombie")
process\r\n
terminated
but
not
reaped
by
its
parent
For
BSD
formats
and
when
the
stat
keyword
is
used\r\n
additional
characters
may
be
displayed:
<
high-priority
(not
nice
to
other
users)
N
low-priority
(nice
to
other
users)
L
has
pages
locked
into
memory
(for
real-time
and
custom
IO)
s
is
a
session
leader
l
is
multi-threaded
(using
CLONE_THREAD\r\n
like
NPTL
pthreads
do)
+
is
in
the
foreground
process
group
OBSOLETE
SORT
KEYS
These
keys
are
used
by
the
BSD
O
option
(when
it
is
used
for
sorting)

The
GNU
--sort
option
doesn't
use
these
keys\r\n
but
the
specifiers
described
below
in
the
STANDARD
FORMAT
SPECIFIERS
section

Note
that
the
values
used
in
sorting
are
the
internal
values
ps
uses
and
not
the
"cooked"
values
used
in
some
of
the
output
format
fields
(e
g

sorting
on
tty
will
sort
into
device
number\r\n
not
according
to
the
terminal
name
displayed)

Pipe
ps
output
into
the
sort(1)
command
if
you
want
to
sort
the
cooked
values

KEY
LONG
DESCRIPTION
c
cmd
simple
name
of
executable
C
pcpu
cpu
utilization
f
flags
flags
as
in
long
format
F
field
g
pgrp
process
group
ID
G
tpgid
controlling
tty
process
group
ID
j
cutime
cumulative
user
time
J
cstime
cumulative
system
time
k
utime
user
time
m
min_flt
number
of
minor
page
faults
M
maj_flt
number
of
major
page
faults
n
cmin_flt
cumulative
minor
page
faults
N
cmaj_flt
cumulative
major
page
faults
o
session
session
ID
p
pid
process
ID
P
ppid
parent
process
ID
r
rss
resident
set
size
R
resident
resident
pages
s
size
memory
size
in
kilobytes
S
share
amount
of
shared
pages
t
tty
the
device
number
of
the
controlling
tty
T
start_time
time
process
was
started
U
uid
user
ID
number
u
user
user
name
v
vsize
total
VM
size
in
KiB
y
priority
kernel
scheduling
priority
AIX
FORMAT
DESCRIPTORS
This
ps
supports
AIX
format
descriptors\r\n
which
work
somewhat
like
the
formatting
codes
of
printf(1)
and
printf(3)

For
example\r\n
the
normal
default
output
can
be
produced
with
this:
ps
-eo
"%p
%y
%x
%c"

The
NORMAL
codes
are
described
in
the
next
section

CODE
NORMAL
HEADER
%C
pcpu
%CPU
%G
group
GROUP
%P
ppid
PPID
%U
user
USER
%a
args
COMMAND
%c
comm
COMMAND
%g
rgroup
RGROUP
%n
nice
NI
%p
pid
PID
%r
pgid
PGID
%t
etime
ELAPSED
%u
ruser
RUSER
%x
time
TIME
%y
tty
TTY
%z
vsz
VSZ
STANDARD
FORMAT
SPECIFIERS
Here
are
the
different
keywords
that
may
be
used
to
control
the
output
format
(e
g

with
option
-o)
or
to
sort
the
selected
processes
with
the
GNU-style
--sort
option

For
example:
ps
-eo
pid\r\nuser\r\nargs
--sort
user
This
version
of
ps
tries
to
recognize
most
of
the
keywords
used
in
other
implementations
of
ps

The
following
user-defined
format
specifiers
may
contain
spaces:
args\r\n
cmd\r\n
comm\r\n
command\r\n
fname\r\n
ucmd\r\n
ucomm\r\n
lstart\r\n
bsdstart\r\n
start

Some
keywords
may
not
be
available
for
sorting

CODE
HEADER
DESCRIPTION
%cpu
%CPU
cpu
utilization
of
the
process
in
"##
#"
format

Currently\r\n
it
is
the
CPU
time
used
divided
by
the
time
the
process
has
been
running
(cputime/realtime
ratio)\r\n
expressed
as
a
percentage

It
will
not
add
up
to
100%
unless
you
are
lucky

(alias
pcpu)

%mem
%MEM
ratio
of
the
process's
resident
set
size
to
the
physical
memory
on
the
machine\r\n
expressed
as
a
percentage

(alias
pmem)

args
COMMAND
command
with
all
its
arguments
as
a
string

Modifications
to
the
arguments
may
be
shown

The
output
in
this
column
may
contain
spaces

A
process
marked
<defunct>
is
partly
dead\r\n
waiting
to
be
fully
destroyed
by
its
parent

Sometimes
the
process
args
will
be
unavailable;
when
this
happens\r\n
ps
will
instead
print
the
executable
name
in
brackets

(alias
cmd\r\n
command)

See
also
the
comm
format
keyword\r\n
the
-f
option\r\n
and
the
c
option

When
specified
last\r\n
this
column
will
extend
to
the
edge
of
the
display

If
ps
can
not
determine
display
width\r\n
as
when
output
is
redirected
(piped)
into
a
file
or
another
command\r\n
the
output
width
is
undefined
(it
may
be
80\r\n
unlimited\r\n
determined
by
the
TERM
variable\r\n
and
so
on)

The
COLUMNS
environment
variable
or
--cols
option
may
be
used
to
exactly
determine
the
width
in
this
case

The
w
or
-w
option
may
be
also
be
used
to
adjust
width

blocked
BLOCKED
mask
of
the
blocked
signals\r\n
see
signal(7)

According
to
the
width
of
the
field\r\n
a
32
or
64-bit
mask
in
hexadecimal
format
is
displayed

(alias
sig_block\r\n
sigmask)

bsdstart
START
time
the
command
started

If
the
process
was
started
less
than
24
hours
ago\r\n
the
output
format
is
"
HH:MM"\r\n
else
it
is
"
Mmm:SS"
(where
Mmm
is
the
three
letters
of
the
month)

See
also
lstart\r\n
start\r\n
start_time\r\n
and
stime

bsdtime
TIME
accumulated
cpu
time\r\n
user
+
system

The
display
format
is
usually
"MMM:SS"\r\n
but
can
be
shifted
to
the
right
if
the
process
used
more
than
999
minutes
of
cpu
time

c
C
processor
utilization

Currently\r\n
this
is
the
integer
value
of
the
percent
usage
over
the
lifetime
of
the
process

(see
%cpu)

caught
CAUGHT
mask
of
the
caught
signals\r\n
see
signal(7)

According
to
the
width
of
the
field\r\n
a
32
or
64
bits
mask
in
hexadecimal
format
is
displayed

(alias
sig_catch\r\n
sigcatch)

cgname
CGNAME
display
name
of
control
groups
to
which
the
process
belongs

cgroup
CGROUP
display
control
groups
to
which
the
process
belongs

class
CLS
scheduling
class
of
the
process

(alias
policy\r\n
cls)

Field's
possible
values
are:
-
not
reported
TS
SCHED_OTHER
FF
SCHED_FIFO
RR
SCHED_RR
B
SCHED_BATCH
ISO
SCHED_ISO
IDL
SCHED_IDLE
?
unknown
value
cls
CLS
scheduling
class
of
the
process

(alias
policy\r\n
cls)

Field's
possible
values
are:
-
not
reported
TS
SCHED_OTHER
FF
SCHED_FIFO
RR
SCHED_RR
B
SCHED_BATCH
ISO
SCHED_ISO
IDL
SCHED_IDLE
?
unknown
value
cmd
CMD
see
args

(alias
args\r\n
command)

comm
COMMAND
command
name
(only
the
executable
name)

Modifications
to
the
command
name
will
not
be
shown

A
process
marked
<defunct>
is
partly
dead\r\n
waiting
to
be
fully
destroyed
by
its
parent

The
output
in
this
column
may
contain
spaces

(alias
ucmd\r\n
ucomm)

See
also
the
args
format
keyword\r\n
the
-f
option\r\n
and
the
c
option

When
specified
last\r\n
this
column
will
extend
to
the
edge
of
the
display

If
ps
can
not
determine
display
width\r\n
as
when
output
is
redirected
(piped)
into
a
file
or
another
command\r\n
the
output
width
is
undefined
(it
may
be
80\r\n
unlimited\r\n
determined
by
the
TERM
variable\r\n
and
so
on)

The
COLUMNS
environment
variable
or
--cols
option
may
be
used
to
exactly
determine
the
width
in
this
case

The
w
or
-w
option
may
be
also
be
used
to
adjust
width

command
COMMAND
See
args

(alias
args\r\n
command)

cp
CP
per-mill
(tenths
of
a
percent)
CPU
usage

(see
%cpu)

cputime
TIME
cumulative
CPU
time\r\n
"[DD-]hh:mm:ss"
format

(alias
time)

drs
DRS
data
resident
set
size\r\n
the
amount
of
physical
memory
devoted
to
other
than
executable
code

egid
EGID
effective
group
ID
number
of
the
process
as
a
decimal
integer

(alias
gid)

egroup
EGROUP
effective
group
ID
of
the
process

This
will
be
the
textual
group
ID\r\n
if
it
can
be
obtained
and
the
field
width
permits\r\n
or
a
decimal
representation
otherwise

(alias
group)

eip
EIP
instruction
pointer

esp
ESP
stack
pointer

etime
ELAPSED
elapsed
time
since
the
process
was
started\r\n
in
the
form
[[DD-]hh:]mm:ss

etimes
ELAPSED
elapsed
time
since
the
process
was
started\r\n
in
seconds

euid
EUID
effective
user
ID
(alias
uid)

euser
EUSER
effective
user
name

This
will
be
the
textual
user
ID\r\n
if
it
can
be
obtained
and
the
field
width
permits\r\n
or
a
decimal
representation
otherwise

The
n
option
can
be
used
to
force
the
decimal
representation

(alias
uname\r\n
user)

f
F
flags
associated
with
the
process\r\n
see
the
PROCESS
FLAGS
section

(alias
flag\r\n
flags)

fgid
FGID
filesystem
access
group
ID

(alias
fsgid)

fgroup
FGROUP
filesystem
access
group
ID

This
will
be
the
textual
group
ID\r\n
if
it
can
be
obtained
and
the
field
width
permits\r\n
or
a
decimal
representation
otherwise

(alias
fsgroup)

flag
F
see
f

(alias
f\r\n
flags)

flags
F
see
f

(alias
f\r\n
flag)

fname
COMMAND
first
8
bytes
of
the
base
name
of
the
process's
executable
file

The
output
in
this
column
may
contain
spaces

fuid
FUID
filesystem
access
user
ID

(alias
fsuid)

fuser
FUSER
filesystem
access
user
ID

This
will
be
the
textual
user
ID\r\n
if
it
can
be
obtained
and
the
field
width
permits\r\n
or
a
decimal
representation
otherwise

gid
GID
see
egid

(alias
egid)

group
GROUP
see
egroup

(alias
egroup)

ignored
IGNORED
mask
of
the
ignored
signals\r\n
see
signal(7)

According
to
the
width
of
the
field\r\n
a
32
or
64
bits
mask
in
hexadecimal
format
is
displayed

(alias
sig_ignore\r\n
sigignore)

ipcns
IPCNS
Unique
inode
number
describing
the
namespace
the
process
belongs
to

See
namespaces(7)

label
LABEL
security
label\r\n
most
commonly
used
for
SELinux
context
data

This
is
for
the
Mandatory
Access
Control
("MAC")
found
on
high-security
systems

lstart
STARTED
time
the
command
started

See
also
bsdstart\r\n
start\r\n
start_time\r\n
and
stime

lsession
SESSION
displays
the
login
session
identifier
of
a
process\r\n
if
systemd
support
has
been
included

lwp
LWP
light
weight
process
(thread)
ID
of
the
dispatchable
entity
(alias
spid\r\n
tid)

See
tid
for
additional
information

lxc
LXC
The
name
of
the
lxc
container
within
which
a
task
is
running

If
a
process
is
not
running
inside
a
container\r\n
a
dash
('-')
will
be
shown

machine
MACHINE
displays
the
machine
name
for
processes
assigned
to
VM
or
container\r\n
if
systemd
support
has
been
included

maj_flt
MAJFLT
The
number
of
major
page
faults
that
have
occurred
with
this
process

min_flt
MINFLT
The
number
of
minor
page
faults
that
have
occurred
with
this
process

mntns
MNTNS
Unique
inode
number
describing
the
namespace
the
process
belongs
to

See
namespaces(7)

netns
NETNS
Unique
inode
number
describing
the
namespace
the
process
belongs
to

See
namespaces(7)

ni
NI
nice
value

This
ranges
from
19
(nicest)
to
-20
(not
nice
to
others)\r\n
see
nice(1)

(alias
nice)

nice
NI
see
ni
(alias
ni)

nlwp
NLWP
number
of
lwps
(threads)
in
the
process

(alias
thcount)

nwchan
WCHAN
address
of
the
kernel
function
where
the
process
is
sleeping
(use
wchan
if
you
want
the
kernel
function
name)

Running
tasks
will
display
a
dash
('-')
in
this
column

ouid
OWNER
displays
the
Unix
user
identifier
of
the
owner
of
the
session
of
a
process\r\n
if
systemd
support
has
been
included

pcpu
%CPU
see
%cpu

(alias
%cpu)

pending
PENDING
mask
of
the
pending
signals

See
signal(7)

Signals
pending
on
the
process
are
distinct
from
signals
pending
on
individual
threads

Use
the
m
option
or
the
-m
option
to
see
both

According
to
the
width
of
the
field\r\n
a
32
or
64
bits
mask
in
hexadecimal
format
is
displayed

(alias
sig)

pgid
PGID
process
group
ID
or\r\n
equivalently\r\n
the
process
ID
of
the
process
group
leader

(alias
pgrp)

pgrp
PGRP
see
pgid

(alias
pgid)

pid
PID
a
number
representing
the
process
ID
(alias
tgid)

pidns
PIDNS
Unique
inode
number
describing
the
namespace
the
process
belongs
to

See
namespaces(7)

pmem
%MEM
see
%mem

(alias
%mem)

policy
POL
scheduling
class
of
the
process

(alias
class\r\n
cls)

Possible
values
are:
-
not
reported
TS
SCHED_OTHER
FF
SCHED_FIFO
RR
SCHED_RR
B
SCHED_BATCH
ISO
SCHED_ISO
IDL
SCHED_IDLE
?
unknown
value
ppid
PPID
parent
process
ID

pri
PRI
priority
of
the
process

Higher
number
means
lower
priority

psr
PSR
processor
that
process
is
currently
assigned
to

rgid
RGID
real
group
ID

rgroup
RGROUP
real
group
name

This
will
be
the
textual
group
ID\r\n
if
it
can
be
obtained
and
the
field
width
permits\r\n
or
a
decimal
representation
otherwise

rss
RSS
resident
set
size\r\n
the
non-swapped
physical
memory
that
a
task
has
used
(in
kiloBytes)

(alias
rssize\r\n
rsz)

rssize
RSS
see
rss

(alias
rss\r\n
rsz)

rsz
RSZ
see
rss

(alias
rss\r\n
rssize)

rtprio
RTPRIO
realtime
priority

ruid
RUID
real
user
ID

ruser
RUSER
real
user
ID

This
will
be
the
textual
user
ID\r\n
if
it
can
be
obtained
and
the
field
width
permits\r\n
or
a
decimal
representation
otherwise

s
S
minimal
state
display
(one
character)

See
section
PROCESS
STATE
CODES
for
the
different
values

See
also
stat
if
you
want
additional
information
displayed

(alias
state)

sched
SCH
scheduling
policy
of
the
process

The
policies
SCHED_OTHER
(SCHED_NORMAL)\r\n
SCHED_FIFO\r\n
SCHED_RR\r\n
SCHED_BATCH\r\n
SCHED_ISO\r\n
and
SCHED_IDLE
are
respectively
displayed
as
0\r\n
1\r\n
2\r\n
3\r\n
4\r\n
and
5

seat
SEAT
displays
the
identifier
associated
with
all
hardware
devices
assigned
to
a
specific
workplace\r\n
if
systemd
support
has
been
included

sess
SESS
session
ID
or\r\n
equivalently\r\n
the
process
ID
of
the
session
leader

(alias
session\r\n
sid)

sgi_p
P
processor
that
the
process
is
currently
executing
on

Displays
"*"
if
the
process
is
not
currently
running
or
runnable

sgid
SGID
saved
group
ID

(alias
svgid)

sgroup
SGROUP
saved
group
name

This
will
be
the
textual
group
ID\r\n
if
it
can
be
obtained
and
the
field
width
permits\r\n
or
a
decimal
representation
otherwise

sid
SID
see
sess

(alias
sess\r\n
session)

sig
PENDING
see
pending

(alias
pending\r\n
sig_pend)

sigcatch
CAUGHT
see
caught

(alias
caught\r\n
sig_catch)

sigignore
IGNORED
see
ignored

(alias
ignored\r\n
sig_ignore)

sigmask
BLOCKED
see
blocked

(alias
blocked\r\n
sig_block)

size
SIZE
approximate
amount
of
swap
space
that
would
be
required
if
the
process
were
to
dirty
all
writable
pages
and
then
be
swapped
out

This
number
is
very
rough!
slice
SLICE
displays
the
slice
unit
which
a
process
belongs
to\r\n
if
systemd
support
has
been
included

spid
SPID
see
lwp

(alias
lwp\r\n
tid)

stackp
STACKP
address
of
the
bottom
(start)
of
stack
for
the
process

start
STARTED
time
the
command
started

If
the
process
was
started
less
than
24
hours
ago\r\n
the
output
format
is
"HH:MM:SS"\r\n
else
it
is
"
Mmm
dd"
(where
Mmm
is
a
three-letter
month
name)

See
also
lstart\r\n
bsdstart\r\n
start_time\r\n
and
stime

start_time
START
starting
time
or
date
of
the
process

Only
the
year
will
be
displayed
if
the
process
was
not
started
the
same
year
ps
was
invoked\r\n
or
"MmmDD"
if
it
was
not
started
the
same
day\r\n
or
"HH:MM"
otherwise

See
also
bsdstart\r\n
start\r\n
lstart\r\n
and
stime

stat
STAT
multi-character
process
state

See
section
PROCESS
STATE
CODES
for
the
different
values
meaning

See
also
s
and
state
if
you
just
want
the
first
character
displayed

state
S
see
s

(alias
s)

suid
SUID
saved
user
ID

(alias
svuid)

supgid
SUPGID
group
ids
of
supplementary
groups\r\n
if
any

See
getgroups(2)

supgrp
SUPGRP
group
names
of
supplementary
groups\r\n
if
any

See
getgroups(2)

suser
SUSER
saved
user
name

This
will
be
the
textual
user
ID\r\n
if
it
can
be
obtained
and
the
field
width
permits\r\n
or
a
decimal
representation
otherwise

(alias
svuser)

svgid
SVGID
see
sgid

(alias
sgid)

svuid
SVUID
see
suid

(alias
suid)

sz
SZ
size
in
physical
pages
of
the
core
image
of
the
process

This
includes
text\r\n
data\r\n
and
stack
space

Device
mappings
are
currently
excluded;
this
is
subject
to
change

See
vsz
and
rss

tgid
TGID
a
number
representing
the
thread
group
to
which
a
task
belongs
(alias
pid)

It
is
the
process
ID
of
the
thread
group
leader

thcount
THCNT
see
nlwp

(alias
nlwp)

number
of
kernel
threads
owned
by
the
process

tid
TID
the
unique
number
representing
a
dispatchable
entity
(alias
lwp\r\n
spid)

This
value
may
also
appear
as:
a
process
ID
(pid);
a
process
group
ID
(pgrp);
a
session
ID
for
the
session
leader
(sid);
a
thread
group
ID
for
the
thread
group
leader
(tgid);
and
a
tty
process
group
ID
for
the
process
group
leader
(tpgid)

time
TIME
cumulative
CPU
time\r\n
"[DD-]HH:MM:SS"
format

(alias
cputime)

tname
TTY
controlling
tty
(terminal)

(alias
tt\r\n
tty)

tpgid
TPGID
ID
of
the
foreground
process
group
on
the
tty
(terminal)
that
the
process
is
connected
to\r\n
or
-1
if
the
process
is
not
connected
to
a
tty

trs
TRS
text
resident
set
size\r\n
the
amount
of
physical
memory
devoted
to
executable
code

tt
TT
controlling
tty
(terminal)

(alias
tname\r\n
tty)

tty
TT
controlling
tty
(terminal)

(alias
tname\r\n
tt)

ucmd
CMD
see
comm

(alias
comm\r\n
ucomm)

ucomm
COMMAND
see
comm

(alias
comm\r\n
ucmd)

uid
UID
see
euid

(alias
euid)

uname
USER
see
euser

(alias
euser\r\n
user)

unit
UNIT
displays
unit
which
a
process
belongs
to\r\n
if
systemd
support
has
been
included

user
USER
see
euser

(alias
euser\r\n
uname)

userns
USERNS
Unique
inode
number
describing
the
namespace
the
process
belongs
to

See
namespaces(7)

utsns
UTSNS
Unique
inode
number
describing
the
namespace
the
process
belongs
to

See
namespaces(7)

uunit
UUNIT
displays
user
unit
which
a
process
belongs
to\r\n
if
systemd
support
has
been
included

vsize
VSZ
see
vsz

(alias
vsz)

vsz
VSZ
virtual
memory
size
of
the
process
in
KiB
(1024-byte
units)

Device
mappings
are
currently
excluded;
this
is
subject
to
change

(alias
vsize)

wchan
WCHAN
name
of
the
kernel
function
in
which
the
process
is
sleeping\r\n
a
"-"
if
the
process
is
running\r\n
or
a
"*"
if
the
process
is
multi-threaded
and
ps
is
not
displaying
threads

ENVIRONMENT
VARIABLES
The
following
environment
variables
could
affect
ps:
COLUMNS
Override
default
display
width

LINES
Override
default
display
height

PS_PERSONALITY
Set
to
one
of
posix\r\n
old\r\n
linux\r\n
bsd\r\n
sun\r\n
digital



(see
section
PERSONALITY
below)

CMD_ENV
Set
to
one
of
posix\r\n
old\r\n
linux\r\n
bsd\r\n
sun\r\n
digital



(see
section
PERSONALITY
below)

I_WANT_A_BROKEN_PS
Force
obsolete
command
line
interpretation

LC_TIME
Date
format

PS_COLORS
Not
currently
supported

PS_FORMAT
Default
output
format
override

You
may
set
this
to
a
format
string
of
the
type
used
for
the
-o
option

The
DefSysV
and
DefBSD
values
are
particularly
useful

POSIXLY_CORRECT
Don't
find
excuses
to
ignore
bad
"features"

POSIX2
When
set
to
"on"\r\n
acts
as
POSIXLY_CORRECT

UNIX95
Don't
find
excuses
to
ignore
bad
"features"

_XPG
Cancel
CMD_ENV=irix
non-standard
behavior

In
general\r\n
it
is
a
bad
idea
to
set
these
variables

The
one
exception
is
CMD_ENV
or
PS_PERSONALITY\r\n
which
could
be
set
to
Linux
for
normal
systems

Without
that
setting\r\n
ps
follows
the
useless
and
bad
parts
of
the
Unix98
standard

PERSONALITY
390
like
the
OS/390
OpenEdition
ps
aix
like
AIX
ps
bsd
like
FreeBSD
ps
(totally
non-standard)
compaq
like
Digital
Unix
ps
debian
like
the
old
Debian
ps
digital
like
Tru64
(was
Digital
Unix\r\n
was
OSF/1)
ps
gnu
like
the
old
Debian
ps
hp
like
HP-UX
ps
hpux
like
HP-UX
ps
irix
like
Irix
ps
linux
*****
recommended
*****
old
like
the
original
Linux
ps
(totally
non-standard)
os390
like
OS/390
Open
Edition
ps
posix
standard
s390
like
OS/390
Open
Edition
ps
sco
like
SCO
ps
sgi
like
Irix
ps
solaris2
like
Solaris
2+
(SunOS
5)
ps
sunos4
like
SunOS
4
(Solaris
1)
ps
(totally
non-standard)
svr4
standard
sysv
standard
tru64
like
Tru64
(was
Digital
Unix\r\n
was
OSF/1)
ps
unix
standard
unix95
standard
unix98
standard
SEE
ALSO
pgrep(1)\r\n
pstree(1)\r\n
top(1)\r\n
proc(5)

STANDARDS
This
ps
conforms
to:
1
Version
2
of
the
Single
Unix
Specification
2
The
Open
Group
Technical
Standard
Base
Specifications\r\n
Issue
6
3
IEEE
Std
1003
1\r\n
2004
Edition
4
X/Open
System

Interfaces
Extension
[UP
XSI]
5
ISO/IEC
9945:2003
AUTHOR
ps

was
originally
written
by
Branko
Lankester
⟨lankeste@fwi
uva
nl⟩

Michael
K

Johnson
⟨johnsonm@redhat
com⟩
re-wrote
it
significantly
to
use
the
proc
filesystem\r\n

changing
a
few
things
in
the
process

Michael
Shields
⟨mjshield@nyx
cs
du
edu⟩
added

the
pid-list
feature

Charles
Blake
⟨cblake@bbn
com⟩
added
multi-level
sorting\r\n

the
dirent-style
library\r\n
the
device
name-to-number
mmaped
database\r\n
the
approximate

binary
search
directly
on
System
map\r\n
and
many
code
and
documentation

cleanups

David
Mossberger-Tang
wrote
the
generic
BFD
support
for
psupdate


Albert
Cahalan
⟨albert@users
sf
net⟩
rewrote
ps
for
full
Unix98
and
BSD

support\r\n
along
with

some
ugly
hacks
for
obsolete
and
for‐
eign
syntax

Please
send
bug
reports
to
⟨procps@freelists
org⟩

No
subscription
is
required
or
suggested

procps-ng
August
2015
PS(1)
egrep "a
"  
"aabaaca1acaada"